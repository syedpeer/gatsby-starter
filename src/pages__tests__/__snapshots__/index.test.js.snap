// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage renders correctly 1`] = `
<div
  css={
    Object {
      "map": undefined,
      "name": "12xy27n",
      "next": undefined,
      "styles": "
          display:flex;
          flex-direction:column;
          height:100%;
          min-height:100vh;
        ",
    }
  }
>
  <div
    css={
      Object {
        "map": undefined,
        "name": "73vj80",
        "next": undefined,
        "styles": "
            flex:1;
            header {
              border-bottom: solid 1px;
              padding: 3.24rem;
            }
            main {
              padding: 3.24rem;
            }
          ",
      }
    }
  >
    <header>
      <h1>
        Hello world!
      </h1>
    </header>
    <main>
      <section>
        <p
          data-testid="app-description"
        >
          This is a Gatsbyjs starter that ships with boilerplate Gatsby and a small collection of plugins to start a PWA with Google Analytics, Tag Manager, Manifest, SEO tools, Stripe for product listings and checkout, plus the basic TDD/automated-test tools preferred by the Gatsby core contributors: Jest & Cypress.
        </p>
        <p>
          A demo of this starter can be found at 
          <a
            href="//gatsby-starter.davesabine.com"
          >
            gatsby-starter.davesabine.com
          </a>
           and the full source code is at 
          <a
            href="//github.com/DavidSabine/gatsby-starter"
          >
            github.com/DavidSabine/gatsby-starter
          </a>
          .
        </p>
      </section>
      <section>
        <h2>
          Notable Pages of this Starter
        </h2>
        <ul>
          <li>
            <a
              href="/"
            >
              Home
            </a>
          </li>
          <li>
            <a
              href="/404/"
            >
              Custom 404 Error
            </a>
            : overrides the Gatsbyjs default 404
          </li>
          <li>
            <a
              href="/dashboard/"
            >
              Dashboard
            </a>
            : a client-only path (not rendered as static HTML)
            <ul>
              <li>
                <a
                  href="/dashboard/login"
                >
                  Login
                </a>
                : just a placeholder component
              </li>
              <li>
                <a
                  href="/dashboard/profile"
                >
                  Profile
                </a>
                : just a placeholder component
              </li>
            </ul>
          </li>
        </ul>
      </section>
      <h3>
        Stripe Tools
      </h3>
      <p>
        Depending on the level of customization required, you may decide to use "Stripe Checkout", or "Stripe Elements".
      </p>
      <p>
        The plugins are installed.  Configure with your own key and form handler.
      </p>
      <p>
        <strong>
          To see these tools in action:
        </strong>
         use any email address, 4242 4242 4242 4242 as the credit card number, any 3 numbers for CVC, and any future date of expiration.
      </p>
      <h4>
        Stripe Checkout(Beta) Demo
      </h4>
      <div>
        <button
          data-testid="checkout-button"
          disabled={false}
          onClick={[Function]}
        >
          Pay with 'Stripe Checkout (Beta)'
        </button>
        <span>
          
        </span>
      </div>
      <p>
        Stripe Checkout (Beta) is simple.  You pass it some info and it takes your customer through a payment form fully-hosted by Stripe.  (A lot like the ease of PayPal circa 2001.)
      </p>
      <h4>
        Stripe Checkout(v3) Demo
      </h4>
      <div>
        <button
          data-testid="checkout-button"
          disabled={false}
          onClick={[Function]}
        >
          Pay with 'Stripe Checkout (v3)'
        </button>
        <span>
          
        </span>
      </div>
      <p>
        Stripe Checkout (v3) is medium-simple.  You pass it an amount and a description, and it validates the Credit Card and delivers you a token.  You must also produce a self-hosted lambda-like function to actually interact with your Stripe account â€” like performing charges.
      </p>
      <h4>
        Stripe Elements Demo (Using &lt;CardElement /&gt;)
      </h4>
      <form
        onSubmit={[Function]}
      >
        <div>
          <input
            id="amount"
            name="amount"
            placeholder="How much would you like to pay?"
            type="text"
          />
        </div>
        <div>
          <input
            id="cardholdersName"
            name="cardholdersName"
            placeholder="Cardholder's Name"
            type="text"
          />
        </div>
        <div>
          <label>
            <div />
          </label>
        </div>
        <button>
          Submit Card Details to Stripe, and Retrieve Token
        </button>
      </form>
      <p>
        Stripe Elements are not styled but allow for custom forms, such as the Name and Amount fields above.
      </p>
    </main>
  </div>
  <footer
    dangerouslySetInnerHTML={
      Object {
        "__html": "
		<a rel=\\"license\\" href=\\"//creativecommons.org/licenses/by-sa/4.0/\\"><img alt=\\"Creative Commons Licence\\" style=\\"border-width:0\\" src=\\"//i.creativecommons.org/l/by-sa/4.0/88x31.png\\" /></a><br />
		<span xmlns:dct=\\"http://purl.org/dc/terms/\\" property=\\"dct:title\\">DavidSabine/gatsby-starter</span> by <a xmlns:cc=\\"http://creativecommons.org/ns#\\" href=\\"//davesabine.com\\" property=\\"cc:attributionName\\" rel=\\"cc:attributionURL\\">David Sabine</a> is licensed under a <a rel=\\"license\\" href=\\"//creativecommons.org/licenses/by-sa/4.0/\\">Creative Commons Attribution-ShareAlike 4.0 International License</a>.<br />
		Based on a work at <a xmlns:dct=\\"http://purl.org/dc/terms/\\" href=\\"//github.com/DavidSabine/gatsby-starter\\" rel=\\"dct:source\\">github.com/DavidSabine/gatsby-starter</a>.
	",
      }
    }
  />
</div>
`;
